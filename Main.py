import os
from datetime import datetime

import pandas as pd
import numpy as np

from utils.FeatureExtraction import FeatureExtractor

URL = FeatureExtractor("https://www.facebook.com/help/cookies/?ref=sitefooter")

train = pd.read_csv('train.csv')
d = train['url'][:5]
# extract features and save into a csv file
hostname_size = []
path_size = []
count_percent = []
count_at = []
count_question_mark = []
count_hyphen = []
count_equal = []
count_full_point = []
count_http = []
count_www = []
count_digits = []
count_tokens = []
count_directories = []
contain_protocol = []
vowel_consonant_ratio_in_hostname = []
digit_letter_ratio = []

for url in train['url']:
    features = FeatureExtractor(url)
    hostname_size.append(features.extract_host_name_size())
    path_size.append(features.extract_path_size())
    count_at.append(features.count_delimiters("@", url))
    count_percent.append(features.count_delimiters("%", url))
    count_question_mark.append(features.count_delimiters("?", url))
    count_hyphen.append(features.count_delimiters("-", url))
    count_equal.append(features.count_delimiters("=", url))
    count_full_point.append(features.count_delimiters(".", url))
    count_http.append(features.count_delimiters("http", url))
    count_www.append(features.count_delimiters("www", url))
    count_digits.append(features.count_digits(url))
    count_tokens.append(features.count_tokens())
    count_directories.append(features.count_directories())
    contain_protocol.append(features.contain_protocol())
    vowel_consonant_ratio_in_hostname.append(features.vowel_consonant_ratio_in_hostname())
    digit_letter_ratio.append(features.digit_letter_ratio())

data = {
    'hostNameSize': hostname_size,
    'pathSize': path_size,
    'countPercent': count_percent,
    'countAt': count_at,
    'countQuestionMark': count_question_mark,
    'countHyphen': count_hyphen,
    'countEqual': count_equal,
    'countFullPoint': count_full_point,
    'countHttp': count_http,
    'countWww': count_www,
    'countDigits': count_digits,
    'countTokens': count_tokens,
    'countDirectories': count_directories,
    'containProtocol': contain_protocol,
    'vowelConsonantRatioInHostname': vowel_consonant_ratio_in_hostname,
    'digitLetterRatio': count_digits,
}
df = pd.DataFrame(data)


def get_file_name(output_dir):
    current_time = datetime.now().strftime("%Y_%m_%d_%H_%M_%S")
    file = os.path.join(output_dir, current_time + ".csv")
    return file


file_name = get_file_name("data/features")
df.to_csv(file_name, index=False)
