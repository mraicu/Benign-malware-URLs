from models.KnnModel import KnnClassifierModel
from models.LogisticRegressionModel import LogisticRegressionModel
from models.MLPClassifierModel import MLPClassifierModel
from models.RandomForestModel import RandomForestModel
from models.XGBoost import XGBoostModel


class ModelFactory:
    @staticmethod
    def create_model(name, X_train, y_train, X_test, y_test, params):
        if name == 'RandomForestClassifier':
            return RandomForestModel(X_train, y_train, X_test, y_test, params)
        if name == 'MLPRegressor':
            return MLPClassifierModel(X_train, y_train, X_test, y_test, params)
        if name == 'LogisticRegression':
            return LogisticRegressionModel(X_train, y_train, X_test, y_test, params)
        if name == 'KnnClassifier':
            return KnnClassifierModel(X_train, y_train, X_test, y_test, params)
        if name == 'XGBoost':
            return XGBoostModel(X_train, y_train, X_test, y_test, params)
        else:
            raise ValueError(f"Unknown model name: {name}")
