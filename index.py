import numpy as np
import pandas as pd
import streamlit as st
import pickle

from utils.data_utils import get_features___

st.write("Benign or Malware - URL Detection")

st.write("Lexical Approach")

approach = st.selectbox('Select Approach', ['lexical', 'numerical'], index=None)

if approach == 'lexical':
    options = ['KNN', 'LogisticRegression', 'RandomForest', 'MLP', 'XGBoost', 'MultinomialNB']
else:
    options = ['KNN-num', 'LogisticRegression-num', 'RandomForest-num', 'MLP-num', 'XGBoost-num', 'MultinomialNB-num']

model_name = st.selectbox('Select Model', options=options, index=None)

model_path = None
if model_name == 'KNN':
    model_path = '27-08-2024_10-35-51_KnnClassifier.pickle'
elif model_name == 'LogisticRegression':
    model_path = '27-08-2024_10-36-24_LogisticRegression.pickle'
elif model_name == 'RandomForest':
    model_path = '27-08-2024_10-37-42_RandomForestClassifier.pickle'
elif model_name == 'MLP':
    model_path = '27-08-2024_10-37-06_MLPRegressor.pickle'
elif model_name == 'XGBoost':
    model_path = '27-08-2024_10-47-48_XGBoost.pickle'
elif model_name == 'MultinomialNB':
    model_path = '28-08-2024_17-00-16_MultinomialNB.pickle'
elif model_name == 'MultinomialNB-num':
    model_path = '28-08-2024_14-24-23_MultinomialNB_numerical.pickle'
elif model_name == 'XGBoost-num':
    model_path = '28-08-2024_16-12-11_XGBoost_numerical.pickle'
elif model_name == 'KNN-num':
    model_path = '28-08-2024_16-18-03_KnnClassifier_numerical.pickle'
elif model_name == 'LogisticRegression-num':
    model_path = '28-08-2024_16-19-04_LogisticRegression_numerical.pickle'
elif model_name == 'RandomForest-num':
    model_path = '28-08-2024_16-45-19_RandomForestClassifier_numerical.pickle'
elif model_name == 'MLP-num':
    model_path = '28-08-2024_16-44-15_MLPRegressor_numerical.pickle'

if model_path:
    with open(model_path, 'rb') as fp:
        model = pickle.load(fp)

url = st.text_input("Insert your URL here")
if url:
    if approach == 'lexical':
        f = get_features___(pd.DataFrame([url], columns=['url']))
        x = np.array(list(f.values())).reshape(1, -1)

        p = model.predict(x)
        st.write("Malware" if p[0] == 1 else "Benign")

    elif approach == 'numerical':
        vectorizer = pickle.load(open('vectorizer.pickle', 'rb'))
        vectors = vectorizer.transform([url])

        p = model.predict(vectors)
        print(model)
        st.write("Malware" if p[0] == 1 else "Benign")

col1, col2 = st.columns(2)

with col1:
    st.image("image/accuracy.png")
    st.image("image/f1.png")


with col2:
    st.image("image/precision.png")
    st.image("image/recall.png")
